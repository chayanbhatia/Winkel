{"ast":null,"code":"import jwt from 'jsonwebtoken';\nimport firebase from './Firebase';\nexport const GoogleSignIn = async () => {\n  var provider = new firebase.auth.GoogleAuthProvider();\n  return firebase.auth().signInWithRedirect(provider).then(result => {\n    console.log('hello');\n    const db = firebase.firestore();\n    db.collection('users').doc(result.user.uid).set({\n      name: result.user.displayName,\n      email: result.user.email,\n      uid: result.user.uid\n    }, {\n      merge: true\n    });\n    const resultData = {\n      name: result.user.displayName,\n      email: result.user.email,\n      uid: result.user.uid\n    };\n    const Token = jwt.sign(resultData, process.env.REACT_APP_SECURE_TOKEN_ACCESS_KEY);\n    localStorage.setItem('authToken', Token);\n    return result;\n  }).catch(error => {\n    return error;\n  });\n};","map":{"version":3,"sources":["/Users/alizahir/Documents/Programming/Web Development /Personal-projects/Winkel-eCommerce/winkel/src/config/FirebaseAuth.js"],"names":["jwt","firebase","GoogleSignIn","provider","auth","GoogleAuthProvider","signInWithRedirect","then","result","console","log","db","firestore","collection","doc","user","uid","set","name","displayName","email","merge","resultData","Token","sign","process","env","REACT_APP_SECURE_TOKEN_ACCESS_KEY","localStorage","setItem","catch","error"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAO,MAAMC,YAAY,GAAG,YAAY;AAEpC,MAAIC,QAAQ,GAAG,IAAIF,QAAQ,CAACG,IAAT,CAAcC,kBAAlB,EAAf;AACA,SAAOJ,QAAQ,CAACG,IAAT,GAAgBE,kBAAhB,CAAmCH,QAAnC,EACFI,IADE,CACIC,MAAD,IAAY;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,UAAMC,EAAE,GAAGV,QAAQ,CAACW,SAAT,EAAX;AACAD,IAAAA,EAAE,CAACE,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BN,MAAM,CAACO,IAAP,CAAYC,GAAvC,EAA4CC,GAA5C,CAAgD;AAC5CC,MAAAA,IAAI,EAAEV,MAAM,CAACO,IAAP,CAAYI,WAD0B;AAE5CC,MAAAA,KAAK,EAAEZ,MAAM,CAACO,IAAP,CAAYK,KAFyB;AAG5CJ,MAAAA,GAAG,EAAER,MAAM,CAACO,IAAP,CAAYC;AAH2B,KAAhD,EAIG;AAAEK,MAAAA,KAAK,EAAE;AAAT,KAJH;AAKA,UAAMC,UAAU,GAAG;AACfJ,MAAAA,IAAI,EAAEV,MAAM,CAACO,IAAP,CAAYI,WADH;AAEfC,MAAAA,KAAK,EAAEZ,MAAM,CAACO,IAAP,CAAYK,KAFJ;AAGfJ,MAAAA,GAAG,EAAER,MAAM,CAACO,IAAP,CAAYC;AAHF,KAAnB;AAKA,UAAMO,KAAK,GAAGvB,GAAG,CAACwB,IAAJ,CAASF,UAAT,EAAqBG,OAAO,CAACC,GAAR,CAAYC,iCAAjC,CAAd;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCN,KAAlC;AAEA,WAAOf,MAAP;AACH,GAlBE,EAmBFsB,KAnBE,CAmBKC,KAAD,IAAW;AACd,WAAOA,KAAP;AACH,GArBE,CAAP;AAuBH,CA1BM","sourcesContent":["import jwt from 'jsonwebtoken'\nimport firebase from './Firebase'\n\nexport const GoogleSignIn = async () => {\n\n    var provider = new firebase.auth.GoogleAuthProvider();\n    return firebase.auth().signInWithRedirect(provider)\n        .then((result) => {\n            console.log('hello')\n            const db = firebase.firestore();\n            db.collection('users').doc(result.user.uid).set({\n                name: result.user.displayName,\n                email: result.user.email,\n                uid: result.user.uid\n            }, { merge: true });\n            const resultData = {\n                name: result.user.displayName,\n                email: result.user.email,\n                uid: result.user.uid\n            };\n            const Token = jwt.sign(resultData, process.env.REACT_APP_SECURE_TOKEN_ACCESS_KEY);\n            localStorage.setItem('authToken', Token);\n\n            return result;\n        })\n        .catch((error) => {\n            return error;\n        })\n\n}"]},"metadata":{},"sourceType":"module"}