{"ast":null,"code":"import jwt from 'jsonwebtoken';\nimport firebase from './Firebase';\nexport const GoogleSignIn = async () => {\n  var provider = new firebase.auth.GoogleAuthProvider();\n  return firebase.auth().signInWithPopup(provider).then(result => {\n    const db = firebase.firestore();\n    console.log(result.additionalUserInfo.isNewUser());\n    db.collection('users').doc(result.user.uid).set({\n      name: result.user.displayName,\n      email: result.user.email,\n      uid: result.user.uid\n    }, {\n      merge: true\n    });\n    const resultData = {\n      name: result.user.displayName,\n      email: result.user.email,\n      uid: result.user.uid\n    };\n    const Token = jwt.sign(resultData, process.env.REACT_APP_SECURE_TOKEN_ACCESS_KEY);\n    localStorage.setItem('authToken', Token);\n    return result;\n  }).catch(error => {\n    return error;\n  });\n};\nexport const FacebookSignIn = async () => {\n  var provider = new firebase.auth.FacebookAuthProvider();\n  return firebase.auth().signInWithPopup(provider).then(result => {\n    const db = firebase.firestore();\n    db.collection('users').doc(result.user.uid).set({\n      name: result.user.displayName,\n      email: result.user.email,\n      uid: result.user.uid\n    }, {\n      merge: true\n    });\n    const resultData = {\n      name: result.user.displayName,\n      email: result.user.email,\n      uid: result.user.uid\n    };\n    const Token = jwt.sign(resultData, process.env.REACT_APP_SECURE_TOKEN_ACCESS_KEY);\n    localStorage.setItem('authToken', Token);\n    return result;\n  }).catch(error => {\n    return error;\n  });\n};\nexport const logout = async () => {\n  localStorage.removeItem('authToken');\n  return firebase.auth().signOut().then(() => {\n    return \"Success\";\n  }).catch(() => {\n    return \"Error\";\n  });\n};\nexport async function verifySecuredToken(token) {\n  return jwt.verify(token, process.env.NEXT_PUBLIC_SECURE_TOKEN_ACCESS_KEY, (err, userData) => {\n    if (err) return null;\n    if (userData.name === (null || undefined) || userData.email === (null || undefined) || userData.uid === (null || undefined)) return null;\n    return userData;\n  });\n}","map":{"version":3,"sources":["/Users/alizahir/Documents/Programming/Web Development /Personal-projects/Winkel-eCommerce/winkel/src/config/FirebaseAuth.js"],"names":["jwt","firebase","GoogleSignIn","provider","auth","GoogleAuthProvider","signInWithPopup","then","result","db","firestore","console","log","additionalUserInfo","isNewUser","collection","doc","user","uid","set","name","displayName","email","merge","resultData","Token","sign","process","env","REACT_APP_SECURE_TOKEN_ACCESS_KEY","localStorage","setItem","catch","error","FacebookSignIn","FacebookAuthProvider","logout","removeItem","signOut","verifySecuredToken","token","verify","NEXT_PUBLIC_SECURE_TOKEN_ACCESS_KEY","err","userData","undefined"],"mappings":"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","sourcesContent":["import jwt from 'jsonwebtoken'\nimport firebase from './Firebase'\n\nexport const GoogleSignIn = async () => {\n\n    var provider = new firebase.auth.GoogleAuthProvider();\n    return firebase.auth().signInWithPopup(provider)\n        .then((result) => {\n            const db = firebase.firestore();\n            console.log(result.additionalUserInfo.isNewUser())\n            db.collection('users').doc(result.user.uid).set({\n                name: result.user.displayName,\n                email: result.user.email,\n                uid: result.user.uid\n            }, { merge: true });\n            const resultData = {\n                name: result.user.displayName,\n                email: result.user.email,\n                uid: result.user.uid\n            };\n            const Token = jwt.sign(resultData, process.env.REACT_APP_SECURE_TOKEN_ACCESS_KEY);\n            localStorage.setItem('authToken', Token);\n\n            return result;\n        })\n        .catch((error) => {\n            return error;\n        })\n\n}\nexport const FacebookSignIn = async () => {\n\n    var provider = new firebase.auth.FacebookAuthProvider();\n    return firebase.auth().signInWithPopup(provider)\n        .then((result) => {\n            const db = firebase.firestore();\n            db.collection('users').doc(result.user.uid).set({\n                name: result.user.displayName,\n                email: result.user.email,\n                uid: result.user.uid\n            }, { merge: true });\n            const resultData = {\n                name: result.user.displayName,\n                email: result.user.email,\n                uid: result.user.uid\n            };\n            const Token = jwt.sign(resultData, process.env.REACT_APP_SECURE_TOKEN_ACCESS_KEY);\n            localStorage.setItem('authToken', Token);\n\n            return result;\n        })\n        .catch((error) => {\n            return error;\n        })\n\n}\n\nexport const logout = async () => {\n    localStorage.removeItem('authToken');\n    return firebase.auth().signOut().then(() => {\n        return \"Success\";\n    }).catch(() => {\n        return \"Error\"\n    });\n}\n\nexport async function verifySecuredToken(token) {\n\n    return jwt.verify(token, process.env.NEXT_PUBLIC_SECURE_TOKEN_ACCESS_KEY, (err, userData) => {\n        if (err)\n            return null;\n        if (userData.name === (null || undefined) || userData.email === (null || undefined) || userData.uid === (null || undefined))\n            return null;\n        return userData;\n    });\n}"]},"metadata":{},"sourceType":"module"}